{{define "content"}}
<div class="container-fluid">
  <form id="monitorForm" action="/api/plugin/2eb2e1a5-66b4-45f9-ad24-3c4f05c858aa/setting" method="patch"
    class="form-horizontal">
    <div class="card card-primary">
      <div class="card-header">
        <h3 class="card-title">Monitor Setting</h3>
      </div>
      <div class="card-body">
        <div class="form-group row">
          <label class="col-sm-2 col-form-label">Connect token</label>
          <div class="input-group col-sm-10">
            <input id="token" type="text" class="form-control" name="token" value="{{ .token }}" maxlength="32">
            <span class="input-group-append">
              {{if not .token}}
              <button id="generate" type="button" class="btn btn-outline-primary">Generate</button>
              {{else}}
              <button id="generate" type="button" class="btn btn-outline-warning">Regenerate</button>
              {{end}}
            </span>
          </div>
        </div>
      </div>
    </div>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modal-save">Save &
      Reload</button>
  </form>

  <div class="card card-success mt-4">
    <div class="card-header">
      <h3 class="card-title">Connected Agent</h3>
    </div>
    <div class="card-body">
      <table class="table table-bordered">
        <thead>
          <tr>
            <th>ID</th>
            <th>Name</th>
            <th class="th-70">Status</th>
            <th>Hostname</th>
            <th>IP</th>
            <th>System</th>
            <th>Machine</th>
            <th class="th-170">Last Login</th>
            <th class="th-op2">Operation</th>
          </tr>
        </thead>
        <tbody id="agent">
        </tbody>
      </table>
    </div>
    <div class="card-footer clearfix">
      <ul data-page="agent" data-total="{{ ._total }}"
        class="pagination pagination-sm m-0 d-flex justify-content-center">
      </ul>
    </div>
  </div>
</div>

<div class="modal fade" id="modal-rename" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Rename Machine</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <form id="renameForm" method="patch" class="form-horizontal">
        <div class="modal-body">
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Name</label>
            <div class="col-sm-10">
              <input id="editName" name="name" type="text" class="form-control" placeholder="Name" maxlength="32"
                required>
            </div>
          </div>
        </div>
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </form>
    </div>
  </div>
</div>

<div class="modal fade" id="modal-save" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content bg-warning">
      <div class="modal-header">
        <h4 class="modal-title">Regenerate Token</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body">
        <p>If you change your token, all client will be OFFLINE and need to reconfigure to connect again!</p>
      </div>
      <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-outline-light" data-dismiss="modal">Cancel</button>
        <button id="saveConfirm" type="button" class="btn btn-outline-light">Confirm</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="modal-delete" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content bg-danger">
      <div class="modal-header">
        <h4 class="modal-title">Delete Agent</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Once delete, the agent is required to connect again to show on list! Note that this will trigger auto
          reconnect if the agent is ONLINE and you do not change the token first.</p>
      </div>
      <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-outline-light" data-dismiss="modal">Cancel</button>
        <button id="deleteConfirm" type="button" class="btn btn-outline-light">Confirm</button>
      </div>
    </div>
  </div>
</div>
{{end}}

{{define "js"}}
<script nonce="{{ ._nonce }}">
  "use strict"

  function rand_token(length) {
    var a = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890".split("");
    var b = [];
    for (var i = 0; i < length; i++) {
      var j = (Math.random() * (a.length - 1)).toFixed(0);
      b[i] = a[j];
    }
    return b.join("");
  }

  const ParseData = (d) => {
    return `
      <tr>
        <td>${d.ID}</td>
        <td>${d.Name}</td>
        <td>${d.Online ? '<span class="badge bg-success">ONLINE</span>' :
        '<span class="badge bg-secondary">OFFLINE</span>'}</td>
        <td>${d.HostName}</td>
        <td>${d.IP}</td>
        <td>${d.System}</td>
        <td>${d.Machine}</td>
        <td>${new Date(d.LastLogin).Format("yyyy-MM-dd hh:mm:ss")}</td>
        <td>
          <button data-agentID="${d.ID}" data-agentName="${d.Name}" type="button"
            class="btn btn-outline-primary mr-1" data-operation="rename" data-toggle="modal"
            data-target="#modal-rename">Rename</button>
          <button data-operation="delete" data-agentID="${d.ID}" type="button" class="btn btn-outline-danger"
            data-toggle="modal" data-target="#modal-delete">Delete</button>
        </td>
      </tr>
    `;
  };

  const ParseFunc = (obj, page, size) => {
    JSONGet(`/api/plugin/2eb2e1a5-66b4-45f9-ad24-3c4f05c858aa/agent?page=${page}&size=${size}`).done((e) => {
      if (UpdateTotal("agent", e.total, ParseFunc))
        return;
      if (JSON.stringify(e.data) !== JSON.stringify(obj.data)) {
        $("#agent").empty();
        $.each(e.data, function (_, e) {
          $("#agent").append(ParseData(e));
        });
        $("[data-operation='rename']").click((e) => {
          $("#renameForm").attr("action", `/api/plugin/2eb2e1a5-66b4-45f9-ad24-3c4f05c858aa/agent/${e.target.getAttribute("data-agentID")}`)
          $("#editName").val(e.target.getAttribute("data-agentName"));
        })
        $("#renameForm").submit((e) => {
          e.preventDefault();
          let form = document.getElementById("renameForm");
          JSONPatch(GetUrl(form), GetData(form)).done((d) => {
            $('#modal-rename').modal('hide');
            DelayHide()(d);
          });
        })

        $("[data-operation='delete']").click((e) => {
          $("#deleteConfirm").attr("data-agentID", e.target.getAttribute("data-agentID"));
        })
        $("#deleteConfirm").click((e) => {
          JSONDelete(`/api/plugin/2eb2e1a5-66b4-45f9-ad24-3c4f05c858aa/agent/${e.target.getAttribute("data-agentID")}`).done((d) => {
            $('#modal-delete').modal('hide');
            DelayHide()(d);
          });
        })
        obj.data = e.data;
      }
    })
  };
  ParsePage("agent", 10, [5, 10, 20, 50], ParseFunc, 1000);

  $("#generate").click((e) => {
    $("#token").val(rand_token(32));
  })
  $("#saveConfirm").click((e) => {
    let form = document.getElementById("monitorForm");
    JSONPatch(GetUrl(form), GetData(form)).done((d) => {
      $('#modal-save').modal('hide');
      DelayHide()(d);
    });
  })
</script>
{{end}}