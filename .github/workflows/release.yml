name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build_frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ls -al && ls -al skynet
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: skynet/frontend/yarn.lock
      - run: yarn
        working-directory: skynet/frontend
      - run: yarn build
        working-directory: skynet/frontend
      - uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: skynet/frontend/dist

  build_skynet:
    needs: build_frontend
    name: Build skynet ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: skynet
            name: skynet-linux-x86_64.tar.gz
          - os_name: linux-i686
            os: ubuntu-20.04
            target: i686-unknown-linux-gnu
            bin: skynet
            name: skynet-linux-i686.tar.gz
          - os_name: linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            bin: skynet
            name: skynet-linux-aarch64.tar.gz
          - os_name: windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-gnu
            bin: skynet.exe
            name: skynet-windows-x86_64.zip
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: skynet
            name: skynet-darwin-x86_64.tar.gz
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: skynet
            name: skynet-darwin-aarch64.tar.gz
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "both"
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: false
      - uses: actions/download-artifact@v4
        with:
          name: frontend
          path: release/skynet/assets
      - name: Package as archive
        shell: bash
        run: |
          cd release
          mkdir skynet/plugin
          cp ../target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} skynet
          cp ../conf.yml skynet
          cp ../conf.schema.json skynet
          cp ../default.webp skynet
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../${{ matrix.platform.name }} skynet
          else
            tar czvf ../${{ matrix.platform.name }} skynet
          fi
          cd -
      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: skynet-${{ matrix.platform.os_name }}
          path: ${{ matrix.platform.name }}
      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }} > ${{ matrix.platform.name }}.sha256
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: ${{ matrix.platform.name }}*
