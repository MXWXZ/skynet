{{define "content"}}
<div class="container-fluid">
  <div class="card card-primary">
    <div class="card-header">
      <h3 class="card-title">User List</h3>
    </div>
    <div class="card-body">
      <button class="btn btn-primary cardbtn" data-toggle="modal" data-target="#modal-add">Add
        User</button>
      <table class="table table-bordered">
        <thead>
          <tr>
            <th>ID</th>
            <th>Username</th>
            <th class="th-70">Status</th>
            <th class="th-70">Role</th>
            <th class="th-170">Created Time</th>
            <th class="th-170">Last Login</th>
            <th>Last IP</th>
            <th class="th-op3">Operation</th>
          </tr>
        </thead>
        <tbody id="user">
        </tbody>
      </table>
    </div>
    <div class="card-footer clearfix">
      <ul data-page="user" data-total="{{ ._total }}"
        class="pagination pagination-sm m-0 d-flex justify-content-center">
      </ul>
    </div>
  </div>
</div>

<div class="modal fade" id="modal-add" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Add User</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <form id="addUser" action="/api/user" method="post" class="form-horizontal">
        <div class="modal-body">
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Username</label>
            <div class="col-sm-10">
              <input name="username" type="text" class="form-control" placeholder="Username" maxlength="32" required>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Password</label>
            <div class="col-sm-10">
              <input name="password" type="password" class="form-control" placeholder="Password" required>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Role</label>
            <div class="col-sm-10">
              <select name="role" class="form-control">
                <option>User</option>
                <option>Admin</option>
              </select>
            </div>
          </div>
        </div>
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </form>
    </div>
  </div>
</div>

<div class="modal fade" id="modal-edit" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Edit User</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <form id="editUser" method="patch" class="form-horizontal">
        <div class="modal-body">
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Username</label>
            <div class="col-sm-10">
              <input id="editUsername" name="username" type="text" class="form-control" placeholder="Username"
                maxlength="32" required>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Password</label>
            <div class="col-sm-10">
              <input id="editPassword" name="password" type="password" class="form-control" placeholder="NOT CHANGE">
            </div>
          </div>
          <div class="form-group row">
            <label class="col-sm-2 col-form-label">Role</label>
            <div class="col-sm-10">
              <select id="editRole" name="role" class="form-control">
                <option>User</option>
                <option>Admin</option>
              </select>
            </div>
          </div>
        </div>
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </form>
    </div>
  </div>
</div>

<div class="modal fade" id="modal-delete" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content bg-danger">
      <div class="modal-header">
        <h4 class="modal-title">Delete User</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Once delete, all data associated to this user will be deleted PERMANENTLY!</p>
      </div>
      <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-outline-light" data-dismiss="modal">Cancel</button>
        <button id="deleteConfirm" type="button" class="btn btn-outline-light">Confirm</button>
      </div>
    </div>
  </div>
</div>
{{end}}

{{define "js"}}
<script nonce="{{ ._nonce }}">
  "use strict"

  const ParseData = (d) => {
    return `
      <tr>
        <td>${d.ID}</td>
        <td>${d.Username}</td>
        <td>${d.Online ? '<span class="badge bg-success">ONLINE</span>' : '<span class="badge bg-secondary">OFFLINE</span>'}</td>
        <td>${d.Role == 2 ? '<span class="badge bg-orange">Admin</span>' : '<span class="badge bg-secondary">User</span>'}</td>
        <td>${new Date(d.Track.CreatedAt).Format('yyyy-MM-dd hh:mm:ss')}</td>
        <td>${new Date(d.LastLogin).Format('yyyy-MM-dd hh:mm:ss')}</td>
        <td>${d.LastIP}</td>
        <td>
          <button data-operation="edit" data-userID="${d.ID}" data-edituser="${d.Username}"
            data-editrole="${d.Role}" type="button" class="btn btn-outline-primary mr-1" data-toggle="modal"
            data-target="#modal-edit">Edit</button>
          <button data-operation="kick" data-userID="${d.ID}" type="button"
            class="btn btn-outline-warning mr-1">Kick</button>
          <button data-operation="delete" data-userID="${d.ID}" type="button" class="btn btn-outline-danger"
            data-toggle="modal" data-target="#modal-delete">Delete</button>
        </td>
      </tr>
    `;
  };

  const convUser = (d) => {
    switch (d['role']) {
      case 'User':
        d['role'] = 1;
        break;
      case 'Admin':
        d['role'] = 2;
        break;
    }
    return d;
  }

  $('#addUser').submit((e) => {
    e.preventDefault();
    let form = document.getElementById('addUser');
    JSONPost(GetUrl(form), convUser(GetData(form))).done((d) => {
      $('#modal-add').modal('hide');
      DelayHide()(d);
    });
  });

  $('#editUser').submit((e) => {
    e.preventDefault();
    let form = document.getElementById('editUser');
    JSONPatch(GetUrl(form), convUser(GetData(form))).done((d) => {
      $('#modal-edit').modal('hide');
      DelayHide()(d);
    });
  })

  $('#deleteConfirm').click((e) => {
    JSONDelete(`/api/user/${e.target.getAttribute('data-userID')}`).done((d) => {
      $('#modal-delete').modal('hide');
      DelayHide()(d);
    });
  })

  const ParseFunc = (obj, page, size) => {
    JSONGet(`/api/user?page=${page}&size=${size}`).done((e) => {
      if (UpdateTotal('user', e.total, ParseFunc))
        return;
      if (JSON.stringify(e.data) !== JSON.stringify(obj.data)) {
        $('#user').empty();
        $.each(e.data, function (_, e) {
          $('#user').append(ParseData(e));
        });

        $('[data-operation="edit"]').click((e) => {
          $('#editUser').attr('action', `/api/user/${e.target.getAttribute('data-userID')}`)
          $('#editUsername').val(e.target.getAttribute('data-edituser'));
          $('#editRole').get(0).selectedIndex = e.target.getAttribute('data-editrole') - 1;
        })
        $('[data-operation="kick"]').click((e) => {
          JSONPatch(`/api/user/${e.target.getAttribute('data-userID')}`, {}).done(DelayHide());
        })
        $('[data-operation="delete"]').click((e) => {
          $('#deleteConfirm').attr('data-userID', e.target.getAttribute('data-userID'));
        })
        obj.data = e.data;
      }
    })
  };
  ParsePage('user', 10, [5, 10, 20, 50], ParseFunc, 1000);
</script>
{{end}}