{{define "content"}}
<div class="container-fluid">
  <div class="card card-primary">
    <div class="card-header">
      <h3 class="card-title">System Logs</h3>
    </div>
    <div class="card-body">
      {{if eq ._role 2}}
      <button id="deleteAll" class="btn btn-warning cardbtn">Delete all</button>
      {{end}}
      <table class="table table-bordered">
        <thead>
          <tr>
            <th class="th-50">ID</th>
            <th class="th-70">Level</th>
            <th class="th-200">Name</th>
            <th>Message</th>
            <th class="th-170">Time</th>
          </tr>
        </thead>
        <tbody id="notification">
        </tbody>
      </table>
    </div>
    <div class="card-footer clearfix">
      <ul data-page="notification" data-total="{{ ._total }}"
        class="pagination pagination-sm m-0 d-flex justify-content-center">
      </ul>
    </div>
  </div>
</div>
{{end}}

{{define "js"}}
<script nonce="{{ ._nonce }}">
  "use strict"

  const ParseData = (d) => {
    let level = "";
    switch (d.Level) {
      case 0:
        level = '<span class="badge bg-primary">INFO</span>';
        break;
      case 1:
        level = '<span class="badge bg-success">SUCCESS</span>';
        break;
      case 2:
        level = '<span class="badge bg-warning">WARNING</span>';
        break;
      case 3:
        level = '<span class="badge bg-danger">ERROR</span>';
        break;
      case 4:
        level = '<span class="badge bg-orange">FATAL</span>';
        break;
    }
    return `
      <tr>
        <td>${d.ID}</td>
        <td>${level}</td>
        <td>${d.Name}</td>
        <td>${d.Message}</td>
        <td>${new Date(d.Track.CreatedAt).Format("yyyy-MM-dd hh:mm:ss")}</td>
      </tr>
    `;
  };

  const ParseFunc = (obj, page, size) => {
    JSONGet(`/api/notification?page=${page}&size=${size}&order=desc`).done((e) => {
      if (UpdateTotal("notification", e.total, ParseFunc))
        return;
      if (JSON.stringify(e.data) !== JSON.stringify(obj.data)) {
        $("#notification").empty();
        $.each(e.data, function (_, e) {
          $("#notification").append(ParseData(e));
        });
        obj.data = e.data;
      }
    })
  };
  ParsePage("notification", 10, [5, 10, 20, 50], ParseFunc, 0);

  $("#deleteAll").click((e) => {
    JSONDelete("/api/notification").done(DelayReload());
  })
</script>
{{end}}